{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/general/players-grid/players-grid.component.html","webpack:///./src/app/components/general/players-grid/players-grid.component.ts","webpack:///./src/app/components/general/players-search/players-search.component.html","webpack:///./src/app/components/general/players-search/players-search.component.ts","webpack:///./src/app/components/general/players/players.component.html","webpack:///./src/app/components/general/players/players.component.ts","webpack:///./src/app/components/shared/filterText/filter-text.component.html","webpack:///./src/app/components/shared/filterText/filter-text.component.scss","webpack:///./src/app/components/shared/filterText/filter-text.component.ts","webpack:///./src/app/components/shared/pagination/pagination.component.html","webpack:///./src/app/components/shared/pagination/pagination.component.scss","webpack:///./src/app/components/shared/pagination/pagination.component.ts","webpack:///./src/app/components/shared/pipes/trim.pipe.ts","webpack:///./src/app/services/data-filter.service.ts","webpack:///./src/app/services/player.service.ts","webpack:///./src/app/services/players.interceptor.ts","webpack:///./src/app/services/sorter.service.ts","webpack:///./src/app/services/storage.service.ts","webpack:///./src/app/shared.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { PlayersComponent } from './components/general/players/players.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', pathMatch: 'full', redirectTo: '/players' },\r\n  { path: 'players', component: PlayersComponent},\r\n  { path: '**', redirectTo: '/players' }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  /*templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']*/\r\n  template: `<router-outlet></router-outlet>`\r\n})\r\nexport class AppComponent implements OnInit {\r\n  title = 'players';\r\n\r\n  constructor(){}\r\n\r\n  ngOnInit(){\r\n    console.log(\"test 123\");\r\n  }\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { SharedModule } from './shared.module';\r\nimport { PlayersComponent } from './components/general/players/players.component';\r\nimport { PlayersGridComponent } from './components/general/players-grid/players-grid.component';\r\nimport { PlayersSearchComponent } from './components/general/players-search/players-search.component';\r\nimport { PlayersInterceptor } from './services/players.interceptor';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    PlayersComponent,\r\n    PlayersGridComponent,\r\n    PlayersSearchComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpClientModule,\r\n    AppRoutingModule,\r\n    SharedModule\r\n  ],\r\n  providers: [\r\n    { provide: HTTP_INTERCEPTORS, useClass: PlayersInterceptor, multi: true }\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"\\r\\n    <div class=\\\"grid-container\\\">\\r\\n        <div class=\\\"col-sm-12\\\">\\r\\n            <div class=\\\"table\\\">\\r\\n                <table class=\\\"table table-striped table-hover\\\">\\r\\n                    <thead>\\r\\n                        <tr class=\\\"sorter-wrapper\\\">\\r\\n                            <th (click)=\\\"sort('firstName')\\\">First Name \\r\\n                                <span class=\\\"sorter glyphicon glyphicon-sort\\\"></span>\\r\\n                            </th>\\r\\n                            <th (click)=\\\"sort('lastName')\\\">Last Name\\r\\n                                <span class=\\\"sorter glyphicon glyphicon-sort\\\"></span>\\r\\n                            </th>\\r\\n                            <th (click)=\\\"sort('position')\\\">Position\\r\\n                                <span class=\\\"sorter glyphicon glyphicon-sort\\\"></span>\\r\\n                            </th>\\r\\n                            <th (click)=\\\"sort('nationality')\\\">Nationality\\r\\n                                <span class=\\\"sorter glyphicon glyphicon-sort\\\"></span>\\r\\n                            </th>\\r\\n                        </tr>\\r\\n                    </thead>\\r\\n                    <tbody>\\r\\n                        <tr *ngFor=\\\"let player of players\\\">\\r\\n                            <td>{{ player.firstName | trim }}</td>\\r\\n                            <td>{{ player.lastName | trim }}</td>\\r\\n                            <td>{{ player.position }}</td>\\r\\n                            <td>{{ player.nationality | trim }}</td>\\r\\n                        </tr>\\r\\n                        <tr *ngIf=\\\"!players.length\\\">\\r\\n                            <td colspan=\\\"4\\\">No Records Found</td>\\r\\n                        </tr>\\r\\n                    </tbody>\\r\\n                </table>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\"","import { Component, Input, OnInit, ChangeDetectionStrategy, OnChanges } from '@angular/core';\r\nimport { IPlayer } from '../../../components/shared/interfaces';\r\nimport { SorterService } from '../../../services/sorter.service';\r\n\r\n@Component({\r\n    selector: 'app-players-grid', \r\n    templateUrl: './players-grid.component.html'\r\n})\r\nexport class PlayersGridComponent implements OnInit {\r\n\r\n    @Input() players: IPlayer[] = [];\r\n\r\n    constructor(private sorterService: SorterService){}\r\n\r\n    ngOnInit() {\r\n\r\n    }\r\n\r\n    sort(prop: string): void {\r\n        this.sorterService.sort(this.players, prop);\r\n    }\r\n}","module.exports = \"\\r\\n<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-12\\\">\\r\\n        <span class=\\\"obj-align spacer\\\" >Search Type:</span>\\r\\n\\r\\n        <span class=\\\"obj-align spacer\\\" *ngFor=\\\"let searchType of model.searchTypes; let idx = index\\\">\\r\\n            <input type=\\\"radio\\\" \\r\\n                name=\\\"searchTypes\\\" \\r\\n                [checked]=\\\"idx === 0\\\" \\r\\n                [value]=\\\"searchType.value\\\" \\r\\n                (change)=\\\"onSelectionChange(searchType.value)\\\">{{searchType.description}}\\r\\n        </span>\\r\\n        \\r\\n        <input type=\\\"text\\\" class=\\\"obj-align spacer\\\" name=\\\"searchText\\\" [(ngModel)]=\\\"model.searchText\\\" [hidden]=\\\"selectedSearchType == 1\\\" />\\r\\n\\r\\n        <button type=\\\"button\\\" class=\\\"obj-align spacer btn btn-primary\\\" (click)=\\\"searchCondition()\\\" [disabled]=\\\"model.searchText.length == 0 && selectedSearchType == 2\\\">\\r\\n            <span class=\\\"glyphicon glyphicon-search\\\">&nbsp;Search</span>\\r\\n        </button>\\r\\n    </div>\\r\\n</div>\"","import { Component, OnInit, Output, EventEmitter, Input } from \"@angular/core\";\r\nimport { ISearchCriteria, ISearchModel } from \"../../shared/interfaces\";\r\n\r\n\r\n@Component({\r\n    selector: 'app-players-search',\r\n    templateUrl: './players-search.component.html'\r\n})\r\nexport class PlayersSearchComponent implements OnInit {\r\n\r\n    model: { searchTypes: ISearchModel[], searchText: string } \r\n        = { searchTypes: [{value:1, description: 'All'}, {value:2, description: 'Criteria'}], searchText: '' };\r\n    selectedSearchType: number = 1;\r\n    seachCriteria : ISearchCriteria = {type:1, searchText: ''};\r\n    @Output() searchChanged: EventEmitter<ISearchCriteria> = new EventEmitter<ISearchCriteria>();\r\n\r\n    constructor(){}\r\n\r\n    ngOnInit(){\r\n\r\n    }\r\n\r\n    searchCondition(): void {\r\n        this.seachCriteria = {type: this.selectedSearchType, searchText: this.model.searchText};\r\n        this.searchChanged.emit(this.seachCriteria);\r\n    }\r\n\r\n    onSelectionChange(type: number): void {\r\n        this.selectedSearchType = type;\r\n        if(type === 1){\r\n            this.model.searchText = '';\r\n        }\r\n    }\r\n}\r\n\r\n","module.exports = \"<div class=\\\"container\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-12\\\">\\r\\n            <h1>List of Players</h1>\\r\\n        </div>\\r\\n    </div>\\r\\n    <fieldset class=\\\"fieldset-formated\\\">\\r\\n        <legend class=\\\"legend-formated\\\">Database Search</legend>\\r\\n        <br>\\r\\n        <app-players-search (searchChanged)=\\\"searchData($event)\\\"></app-players-search>\\r\\n        <br>\\r\\n    </fieldset>\\r\\n    \\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-12\\\">\\r\\n            <div class=\\\"navbar\\\">\\r\\n                <br><br>\\r\\n                <fieldset class=\\\"fieldset-formated\\\">\\r\\n                    <legend class=\\\"legend-formated\\\">Grid Filter</legend>\\r\\n                    <br>\\r\\n                    <app-filter-text [label]=\\\"label\\\" \\r\\n                            [recordsFound]=\\\"recordsFound\\\" \\r\\n                            [newSaerch]=\\\"newSaerch\\\" \\r\\n                            (changed)=\\\"filterChanged($event)\\\"></app-filter-text>\\r\\n                    <br>\\r\\n                </fieldset>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-12\\\">\\r\\n            <app-players-grid [players]=\\\"filteredPlayers\\\"></app-players-grid>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-12\\\">\\r\\n            <app-pagination [totalItems]=\\\"totalRecords\\\" \\r\\n            [pageSize]=\\\"pageSize\\\" \\r\\n            (pageChanged)=\\\"pageChanged($event)\\\"></app-pagination>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n</div>\"","import { Component, OnInit } from \"@angular/core\";\r\nimport { IPlayer, IPagedResults, ISearchCriteria } from \"../../shared/interfaces\";\r\nimport { Router } from \"@angular/router\";\r\nimport { PlayerService } from \"../../../services/player.service\";\r\nimport { DataFilterService } from \"../../../services/data-filter.service\";\r\nimport { take } from \"rxjs/operators\";\r\nimport { StorageService } from \"../../../services/storage.service\";\r\n\r\n@Component({ \r\n    selector: 'app-players', \r\n    templateUrl: './players.component.html'\r\n  })\r\n  export class PlayersComponent implements OnInit {\r\n\r\n    title: string;\r\n    players: IPlayer[] = [];\r\n    filteredPlayers: IPlayer[] = [];\r\n    searchFilter: ISearchCriteria = {type:1, searchText: ''};\r\n\r\n    totalRecords: number = 0;\r\n    pageSize: number = 10;\r\n    grandTotalRecords: number = 0;\r\n    label: string = 'Filter table';\r\n    recordsFound: boolean = false;\r\n    newSaerch: number = 0;\r\n\r\n    constructor(private router: Router, \r\n        private playerService: PlayerService,\r\n        private dataFilter: DataFilterService,\r\n        private storageService: StorageService){}\r\n\r\n    ngOnInit() {\r\n        this.title = 'Players';\r\n        this.storageService.setUserName('admin');\r\n        this.storageService.setUserPassword('test123');\r\n      }\r\n\r\n    getPlayersWithPagination(page: number): void {\r\n        this.playerService.getPlayersWithPagination((page - 1) * this.pageSize, this.pageSize)\r\n            .pipe(take(1))\r\n            .subscribe((response: IPagedResults<IPlayer[]>) => {\r\n                this.players = this.filteredPlayers = response.results;\r\n                this.totalRecords = response.totalRecords;\r\n                this.grandTotalRecords = response.totalRecords;\r\n                this.recordsFound = this.grandTotalRecords > 0;\r\n                //console.log('this.recordsFound', this.recordsFound)\r\n                //console.log('this.totalRecords', this.totalRecords)\r\n            },\r\n            (err: any) => console.log(err),\r\n            () => console.log('getPlayersWithPagination() retrieved players'));\r\n        }\r\n\r\n    findPlayersWithPagination(searchCriteria: string, page: number): void {\r\n        this.playerService.findPlayersWithPagination(searchCriteria, (page - 1) * this.pageSize, this.pageSize)\r\n            .pipe(take(1))\r\n            .subscribe((response: IPagedResults<IPlayer[]>) => {\r\n                this.players = this.filteredPlayers = response.results;\r\n                this.totalRecords = response.totalRecords;\r\n                this.grandTotalRecords = response.totalRecords;\r\n                this.recordsFound = this.grandTotalRecords > 0;\r\n                //console.log('this.recordsFound', this.recordsFound)\r\n                //console.log('this.totalRecords', this.totalRecords)\r\n            },\r\n            (err: any) => console.log(err),\r\n            () => console.log('getPlayersWithPagination() retrieved players'));\r\n    }\r\n\r\n    filterChanged(filterText: string) {\r\n        if (filterText && this.players) {\r\n            let props = ['firstName', 'lastName', 'position', 'nationality'];\r\n            //console.log('this.players.length = ' + this.players.length)\r\n            this.filteredPlayers = this.dataFilter.filter(this.players, props, filterText);\r\n            this.totalRecords = this.filteredPlayers.length;\r\n        }\r\n        else {\r\n          this.filteredPlayers = this.players;\r\n          this.totalRecords = this.grandTotalRecords;\r\n        }\r\n      }\r\n    \r\n    pageChanged(page: number) {\r\n        if(this.searchFilter.type === 1){\r\n            this.getPlayersWithPagination(page);\r\n        }\r\n        else {\r\n            this.findPlayersWithPagination(this.searchFilter.searchText, page);\r\n        }\r\n      }\r\n\r\n    searchData(criteria: ISearchCriteria): void {\r\n        //console.log('search Criteria', criteria);\r\n        this.searchFilter = criteria;\r\n        this.newSaerch++;\r\n        if(criteria.type === 1){\r\n            this.getPlayersWithPagination(1);\r\n        }\r\n        else {\r\n            this.findPlayersWithPagination(criteria.searchText, 1);\r\n        }\r\n        \r\n    }\r\n  }","module.exports = \"<div class=\\\"spacer\\\">\\n    {{label}}:\\n    <input type=\\\"text\\\" name=\\\"filter\\\"\\n            [(ngModel)]=\\\"model.filter\\\" \\n            (keyup)=\\\"filterChanged($event)\\\" [disabled]=\\\"!recordsFound\\\" />\\n    \\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvc2hhcmVkL2ZpbHRlclRleHQvZmlsdGVyLXRleHQuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit, Output, EventEmitter, Input, OnChanges } from '@angular/core';\n\n@Component({\n  selector: 'app-filter-text',\n  templateUrl: './filter-text.component.html',\n  styleUrls: ['./filter-text.component.scss']\n})\nexport class FilterTextComponent implements OnChanges {\n\n  model: { filter: string } = { filter: null };\n  @Input() label: string = 'Filter';\n  @Input() recordsFound: boolean = false;\n  @Input() newSaerch: number = 0;\n  @Output() changed: EventEmitter<string> = new EventEmitter<string>();\n\n  constructor() { }\n\n  ngOnChanges(){\n    //console.log('new search event')\n    this.resetFilter();\n  }\n\n  filterChanged(event: any): void {\n    event.preventDefault();\n    this.changed.emit(this.model.filter); \n  }\n\n  resetFilter(){\n    this.model.filter = '';\n  }\n\n}\n","module.exports = \"<nav [hidden]=\\\"!isVisible\\\">\\n    <ul class=\\\"pagination\\\">\\n      <li [class.disabled]=\\\"!previousEnabled\\\" (click)=\\\"previousNext(-1, $event)\\\">\\n        <a aria-label=\\\"Previous\\\">\\n          <span aria-hidden=\\\"true\\\">&laquo;</span>\\n        </a>\\n      </li>\\n      <li *ngFor=\\\"let page of pages\\\" (click)=\\\"changePage(page, $event)\\\" [class.active]=\\\"currentPage === page\\\">\\n        <a>{{ page }}</a>\\n      </li>\\n      <li [class.disabled]=\\\"!nextEnabled\\\" (click)=\\\"previousNext(1, $event)\\\">\\n        <a aria-label=\\\"Next\\\">\\n          <span aria-hidden=\\\"true\\\">&raquo;</span>\\n        </a>\\n      </li>\\n    </ul>\\n  </nav>\\n\"","module.exports = \".pagination > .active > a, .pagination > .active > a:focus, .pagination > .active > a:hover, .pagination > .active > span, .pagination > .active > span:focus, .pagination > .active > span:hover {\\n  background-color: #027FF4;\\n  border-color: #027FF4; }\\n\\n.pagination a {\\n  cursor: pointer; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9zaGFyZWQvcGFnaW5hdGlvbi9DOlxcRGV2ZWxvcG1lbnRcXHBsYXllcnMvc3JjXFxhcHBcXGNvbXBvbmVudHNcXHNoYXJlZFxccGFnaW5hdGlvblxccGFnaW5hdGlvbi5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLDBCQUF5QjtFQUN6QixzQkFBcUIsRUFDdEI7O0FBRUQ7RUFDSSxnQkFBZSxFQUNsQiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvc2hhcmVkL3BhZ2luYXRpb24vcGFnaW5hdGlvbi5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5wYWdpbmF0aW9uPi5hY3RpdmU+YSwgLnBhZ2luYXRpb24+LmFjdGl2ZT5hOmZvY3VzLCAucGFnaW5hdGlvbj4uYWN0aXZlPmE6aG92ZXIsIC5wYWdpbmF0aW9uPi5hY3RpdmU+c3BhbiwgLnBhZ2luYXRpb24+LmFjdGl2ZT5zcGFuOmZvY3VzLCAucGFnaW5hdGlvbj4uYWN0aXZlPnNwYW46aG92ZXIge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzAyN0ZGNDtcclxuICAgIGJvcmRlci1jb2xvcjogIzAyN0ZGNDtcclxuICB9XHJcbiAgXHJcbiAgLnBhZ2luYXRpb24gYSB7XHJcbiAgICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICB9Il19 */\"","import { Component, OnInit, Input, Output, EventEmitter, OnChanges } from '@angular/core';\n\n@Component({\n  selector: 'app-pagination',\n  templateUrl: './pagination.component.html',\n  styleUrls: ['./pagination.component.scss']\n})\nexport class PaginationComponent implements OnInit {\n\n  private pagerTotalItems: number;\n  private pagerPageSize: number;\n  \n  totalPages: number;\n  pages: number[] = [];\n  currentPage: number = 1;\n  isVisible: boolean = false;\n  previousEnabled: boolean = false;\n  nextEnabled: boolean = true;\n  \n  @Input() get pageSize():number {\n    return this.pagerPageSize;\n  }\n\n  set pageSize(size:number) {\n    this.pagerPageSize = size;\n    this.update();\n  }\n  \n  @Input() get totalItems():number {\n    return this.pagerTotalItems;\n  }\n\n set totalItems(itemCount:number) {\n    this.pagerTotalItems = itemCount;\n    this.update();\n  }\n  \n  @Output() pageChanged: EventEmitter<number> = new EventEmitter();\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  update(): void {\n    this.pages = [];\n    if (this.pagerTotalItems && this.pagerPageSize) {\n      this.totalPages = Math.ceil(this.pagerTotalItems/this.pageSize);\n      this.isVisible = true;\n      if (this.totalItems >= this.pageSize) {\n        for (let i = 1;i < this.totalPages + 1;i++) {\n          this.pages.push(i);\n        }\n      }\n      return;\n    }\n    \n    this.isVisible = false;\n  }\n  \n  previousNext(direction: number, event?: MouseEvent): void {\n    let page: number = this.currentPage;\n    if (direction == -1) {\n        if (page > 1) page--;\n    } else {\n        if (page < this.totalPages) page++;\n    }\n    this.changePage(page, event);\n  }\n  \n  changePage(page: number, event?: MouseEvent): void {\n    if (event) {\n      event.preventDefault();\n    }\n    if (this.currentPage === page) return;\n    this.currentPage = page;\n    this.previousEnabled = this.currentPage > 1;\n    this.nextEnabled = this.currentPage < this.totalPages;\n    this.pageChanged.emit(page);\n  }\n\n}\n","import {Pipe, PipeTransform} from '@angular/core';\r\n\r\n@Pipe({name: 'trim'})\r\nexport class TrimPipe implements PipeTransform {\r\n  transform(value: any) {\r\n    if (!value) {\r\n      return '';\r\n    }\r\n    return value.trim();\r\n  }\r\n}","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class DataFilterService {\r\n    \r\n    filter(datasource: any[], filterProperties: string[], filterData: string) {\r\n        if (datasource && filterProperties && filterData) {\r\n            filterData = filterData.toUpperCase();\r\n            const filtered = datasource.filter(item => {\r\n                let match = false;\r\n                for (const prop of filterProperties) {\r\n                    let propVal: any = '';\r\n                    if (item[prop]) {\r\n                        propVal = item[prop].toString().toUpperCase();\r\n                    }   \r\n                    \r\n                    if (propVal.indexOf(filterData) > -1) {\r\n                        match = true;\r\n                        break;\r\n                    }\r\n                };\r\n                return match;\r\n            });\r\n            return filtered;\r\n        }\r\n        else {\r\n            return datasource;\r\n        }\r\n    }\r\n    \r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { map, catchError } from 'rxjs/operators';\r\nimport { environment } from '../../environments/environment';\r\nimport { IPlayer, IPagedResults } from '../components/shared/interfaces';\r\n\r\n@Injectable({\r\n        providedIn: 'root'\r\n    })\r\nexport class PlayerService {\r\n\r\n    constructor(private http: HttpClient){}\r\n\r\n    getPlayersWithPagination(page: number, pageSize: number) : Observable<IPagedResults<IPlayer[]>> {\r\n        return this.http.get<IPlayer[]>(`${environment.baseUrl}/${page}/${pageSize}`, { observe: 'response' })\r\n            .pipe(\r\n                    map((res) => {\r\n                        const totalRecords = +res.headers.get('X-PlayerCount');\r\n                        let players = res.body as IPlayer[];\r\n                        return {\r\n                            results: players,\r\n                            totalRecords: totalRecords\r\n                        };\r\n                    }),\r\n                    catchError(this.handleError)\r\n                );\r\n    }\r\n\r\n    findPlayersWithPagination(searchText: string, page: number, pageSize: number) : Observable<IPagedResults<IPlayer[]>> {\r\n        return this.http.get<IPlayer[]>(`${environment.baseUrl}/${searchText}/${page}/${pageSize}`, { observe: 'response' })\r\n            .pipe(\r\n                    map((res) => {\r\n                        const totalRecords = +res.headers.get('X-PlayerCount');\r\n                        let players = res.body as IPlayer[];\r\n                        return {\r\n                            results: players,\r\n                            totalRecords: totalRecords\r\n                        };\r\n                    }),\r\n                    catchError(this.handleError)\r\n                );\r\n    }\r\n\r\n    getPlayers() : Observable<IPlayer[]> {\r\n        return this.http.get<IPlayer[]>(environment.baseUrl)\r\n            .pipe(\r\n                   map((customers: IPlayer[]) => {\r\n                       return customers;\r\n                   }),\r\n                   catchError(this.handleError)\r\n                );\r\n    }\r\n\r\n    private handleError(error: HttpErrorResponse) {\r\n        console.error('server error:', error); \r\n        if (error.error instanceof Error) {\r\n          let errMessage = error.error.message;\r\n          return Observable.throw(errMessage);\r\n        }\r\n        return Observable.throw(error || 'Node.js server error');\r\n    }\r\n}","import { HttpRequest,  HttpHandler,  HttpEvent,  HttpInterceptor} from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { StorageService } from './storage.service';\r\n\r\n@Injectable()\r\nexport class PlayersInterceptor implements HttpInterceptor {\r\n  constructor(private storageService: StorageService) {}\r\n\r\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    console.log('user credentials', btoa(this.storageService.getUserName() + ':' + this.storageService.getUserPassword()))\r\n    request = request.clone({\r\n      setHeaders: {\r\n        'x-access-token': btoa(this.storageService.getUserName() + ':' + this.storageService.getUserPassword())\r\n      }\r\n    });\r\n\r\n    return next.handle(request);\r\n  }\r\n}","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class SorterService {\r\n\r\n\tproperty: string = null;\r\n\tdirection: number = 1;\r\n\r\n    sort(collection: any[], prop: any) {\r\n        this.property = prop;\r\n        this.direction = (this.property === prop) ? this.direction * -1 : 1;\r\n\r\n        collection.sort((a: any,b: any) => {\r\n            let aVal: any;\r\n            let bVal: any;\r\n\r\n            aVal = a[prop];\r\n            bVal = b[prop];\r\n\r\n            if (this.isString(aVal)) aVal = aVal.trim().toUpperCase();\r\n            if (this.isString(bVal)) bVal = bVal.trim().toUpperCase();\r\n          \r\n            if(aVal === bVal){\r\n                return 0;\r\n            }\r\n            else if (aVal > bVal){\r\n                return this.direction * -1;\r\n            }\r\n            else {\r\n                return this.direction * 1;\r\n            }\r\n        });\r\n    }\r\n    \r\n    isString(val: any) : boolean {\r\n      return (val && (typeof val === 'string' || val instanceof String));\r\n    }\r\n\r\n}","import { Injectable } from '@angular/core';\r\n//import { environment } from 'src/environments/environment';\r\n//import { Recipient, Product, ProductOrder } from '../Model/data.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class StorageService {\r\n  private userName = 'USER_NAME';\r\n  private userPassword = 'USER_PASSWORD';\r\n  private hasClientStorage = false;\r\n\r\n  constructor() {\r\n    this.hasClientStorage = window.localStorage !== undefined;\r\n   }\r\n\r\n  /*public getHeader(): null | string {\r\n    if (!this.hasClientStorage) {\r\n      return null;\r\n    }\r\n    return localStorage.getItem(environment.header);\r\n  }\r\n\r\n  public setHeader(): void {\r\n    localStorage.setItem(environment.header, environment.headerValue);\r\n  }\r\n\r\n  public resetHeader(): void {\r\n    localStorage.removeItem(environment.header);\r\n  }*/\r\n\r\n  public getUserName(): null | string {\r\n    if (!this.hasClientStorage) {\r\n      return null;\r\n    }\r\n    return localStorage.getItem(this.userName);\r\n  }\r\n\r\n  public setUserName(user: string): void {\r\n    localStorage.setItem(this.userName, user);\r\n  }\r\n\r\n  public getUserPassword(): null | string {\r\n    if (!this.hasClientStorage) {\r\n      return null;\r\n    }\r\n    return localStorage.getItem(this.userPassword);\r\n  }\r\n\r\n  public setUserPassword(pwd: string): void {\r\n    localStorage.setItem(this.userPassword, pwd);\r\n  }\r\n\r\n  /*public resetUserCredentials(): void{\r\n    localStorage.removeItem(this.userName);\r\n    localStorage.removeItem(this.userPassword);\r\n  }\r\n\r\n  public setIsLogged(value: string): void {\r\n    localStorage.setItem(this._isLogged, value);\r\n  }\r\n\r\n  public getIsLogged(): boolean {\r\n    return JSON.parse(localStorage.getItem(this._isLogged));\r\n  }\r\n\r\n  public setRecipient(recipient: Recipient): void{\r\n    localStorage.setItem(this.userRecipient, JSON.stringify(recipient));\r\n  }\r\n\r\n  public getRecipient(): Recipient{\r\n    return JSON.parse(localStorage.getItem(this.userRecipient));\r\n  }\r\n\r\n  public resetRecipient(): void{\r\n    localStorage.removeItem(this.userRecipient);\r\n  }\r\n\r\n  public setProduct(product: ProductOrder): void{\r\n    localStorage.setItem(this.userProduct, JSON.stringify(product));\r\n  }\r\n\r\n  public getProduct(): ProductOrder{\r\n    return JSON.parse(localStorage.getItem(this.userProduct));\r\n  }\r\n\r\n  public resetProduct(): void{\r\n    localStorage.removeItem(this.userProduct);\r\n  }\r\n\r\n  public resetData(): void {\r\n    this.resetRecipient();\r\n    this.resetProduct();\r\n  }*/\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { PaginationComponent } from './components/shared/pagination/pagination.component';\r\nimport { TrimPipe } from './components/shared/pipes/trim.pipe';\r\nimport { FilterTextComponent } from './components/shared/filterText/filter-text.component';\r\n\r\n@NgModule({\r\n  imports: [ CommonModule, FormsModule, ReactiveFormsModule ],\r\n  declarations: [TrimPipe, FilterTextComponent, PaginationComponent ],\r\n  exports: [ CommonModule, FormsModule, ReactiveFormsModule, TrimPipe, FilterTextComponent, PaginationComponent ]\r\n})\r\nexport class SharedModule { }","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  baseUrl: '/api/players',\r\n  securityToken: 'xxxjsk-sdss-ddd-wsre-dsfsdfd'\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":""}